<!--  Working Files List
      Visual Studio extension tool window that shows a selectable list of files
      that are open in the editor
      Copyright © 2016 Anthony Fung
      
      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU Lesser General Public License as published by
      the Free Software Foundation, either version 3 of the License, or
      (at your option) any later version.
      
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
      GNU Lesser General Public License for more details.
      
      You should have received a copy of the GNU Lesser General Public License
      along with this program. If not, see <http://www.gnu.org/licenses/>.  -->

<UserControl x:Class="WorkingFilesList.ToolWindow.View.WorkingFilesWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:locator="clr-namespace:WorkingFilesList.ToolWindow.Service.Locator"
             xmlns:controls="clr-namespace:WorkingFilesList.ToolWindow.View.Controls"
             xmlns:converter="clr-namespace:WorkingFilesList.ToolWindow.View.Converter"
             Background="{DynamicResource VsBrush.Window}"
             Foreground="{DynamicResource VsBrush.WindowText}"
             mc:Ignorable="d"
             d:DesignHeight="120" d:DesignWidth="300">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Converter/ConverterMappingCollections.xaml"/>
                <ResourceDictionary Source="Theme/ComboBox.xaml"/>
                <ResourceDictionary Source="Theme/NumericUpDown.xaml"/>
                <ResourceDictionary Source="Theme/ProgressBar.xaml"/>
                <ResourceDictionary Source="Theme/Separator.xaml"/>
                <ResourceDictionary Source="Theme/ToggleButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <locator:ViewModelService x:Key="ViewModel" />
            <converter:MappedValuesConverter x:Key="MappedValuesConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid DataContext="{StaticResource ViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--User Preferences-->
        <Border Background="{DynamicResource VsBrush.CommandBarGradient}"
                Padding="0,2">
            <StackPanel DataContext="{Binding UserPreferences}"
                        Orientation="Horizontal">

                <ComboBox ItemsSource="{Binding OptionsLists.ProjectSortOptions, Source={StaticResource ViewModel}}"
                          SelectedItem="{Binding SelectedProjectSortOption}"
                          ToolTip="Project Name Sort"
                          Width="60">
                    
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayName}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <ComboBox ItemsSource="{Binding OptionsLists.DocumentSortOptions, Source={StaticResource ViewModel}}"
                          SelectedItem="{Binding SelectedDocumentSortOption}"
                          ToolTip="File Name Sort"
                          Width="60">
                    
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayName}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <Separator />

                <ToggleButton IsChecked="{Binding GroupByProject, Mode=TwoWay}"
                              ToolTip="Group By Project">
                    <Image Source="Icon/GroupByProject.png" />
                </ToggleButton>

                <ToggleButton IsChecked="{Binding ShowRecentUsage, Mode=TwoWay}"
                              ToolTip="Show Recent Usage">
                    <Image Source="Icon/ShowRecentUsage.png" />
                </ToggleButton>

                <ToggleButton IsChecked="{Binding AssignProjectColours, Mode=TwoWay}"
                              ToolTip="Assign Project Colours">
                    <Image Source="Icon/ProjectColours.png" />
                </ToggleButton>

                <Separator />

                <controls:NumericUpDown Focusable="False"
                                        Minimum="1"
                                        ToolTip="File Name Segments"
                                        Value="{Binding PathSegmentCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Width="40">
                </controls:NumericUpDown>

                <Separator />

                <ToggleButton x:Name="AboutButton"
                              x:FieldModifier="private"
                              ToolTip="Extension Information">
                    <Image Source="Icon/About.png" />
                </ToggleButton>
            </StackPanel>
        </Border>

        <!--Active Documents-->
        <ItemsControl DataContext="{Binding DocumentMetadataManager.ActiveDocumentMetadata}"
                      d:DataContext="{d:DesignData Source=/Design/DesignTimeData/DesignDocumentMetadata.xaml}"
                      Grid.Row="1"
                      IsTabStop="False"
                      ItemsSource="{Binding Mode=OneWay}">
            
            <ItemsControl.Style>
                <Style TargetType="{x:Type ItemsControl}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=AboutButton}" Value="False">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.Style>
            
            <ItemsControl.Template>
                <ControlTemplate>
                    <Border Background="{DynamicResource VsBrush.ToolWindowBackground}">
                        <ScrollViewer Focusable="False"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter Margin="2,0,0,0" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </ItemsControl.Template>

            <ItemsControl.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <StackPanel>
                                            <TextBlock FontStyle="Italic"
                                                       Text="{Binding Name.DisplayName}">
                                            </TextBlock>

                                            <Separator Margin="0,2" />

                                            <ItemsPresenter Margin="0,0,0,10" />
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ItemsControl.GroupStyle>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button>
                        <Button.Template>
                            <ControlTemplate>
                                <Grid Background="Transparent"
                                      ToolTip="{Binding CorrectedFullName}">

                                    <ProgressBar BorderBrush="{Binding ProjectBrush}"
                                                 BorderThickness="{Binding IsActive,
                                                                           Converter={StaticResource MappedValuesConverter},
                                                                           ConverterParameter={StaticResource IsActiveToProgressBarBorderThickness}}"
                                                 Foreground="{Binding ProjectBrush}"
                                                 IsHitTestVisible="False"
                                                 Maximum="1"
                                                 Minimum="0"
                                                 Padding="{Binding IsActive,
                                                                   Converter={StaticResource MappedValuesConverter},
                                                                   ConverterParameter={StaticResource IsActiveToProgressBarPadding}}"
                                                 Value="{Binding UsageOrder}">
                                    </ProgressBar>

                                    <TextBlock Foreground="{DynamicResource VsBrush.ToolWindowText}"
                                               FontWeight="{Binding IsActive,
                                                                    Converter={StaticResource MappedValuesConverter},
                                                                    ConverterParameter={StaticResource IsActiveToFontWeightMapping}}"
                                               IsHitTestVisible="False"
                                               Text="{Binding DisplayName}">
                                    </TextBlock>
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>

                        <Button.InputBindings>
                            <MouseBinding Command="{Binding Commands.ActivateWindow, Source={StaticResource ViewModel}}"
                                          CommandParameter="{Binding .}"
                                          Gesture="LeftClick" >
                            </MouseBinding>

                            <MouseBinding Command="{Binding Commands.CloseDocument, Source={StaticResource ViewModel}}"
                                          CommandParameter="{Binding .}"
                                          Gesture="MiddleClick">
                            </MouseBinding>
                        </Button.InputBindings>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <controls:AboutPanel Grid.Row="1">
            <controls:AboutPanel.Style>
                <Style TargetType="{x:Type controls:AboutPanel}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=AboutButton}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:AboutPanel.Style>
        </controls:AboutPanel>
    </Grid>
</UserControl>
