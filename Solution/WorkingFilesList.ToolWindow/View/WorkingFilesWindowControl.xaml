<!--  Working Files List
      Visual Studio extension tool window that shows a selectable list of files
      that are open in the editor
      Copyright © 2016 Anthony Fung
      
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
      
          http://www.apache.org/licenses/LICENSE-2.0
      
      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License. -->

<UserControl x:Class="WorkingFilesList.ToolWindow.View.WorkingFilesWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:locator="clr-namespace:WorkingFilesList.Core.Service.Locator;assembly=WorkingFilesList.Core"
             xmlns:controls="clr-namespace:WorkingFilesList.ToolWindow.View.Controls"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:coreControls="clr-namespace:WorkingFilesList.Core.Controls;assembly=WorkingFilesList.Core"
             Background="{DynamicResource VsBrush.Window}"
             Foreground="{DynamicResource VsBrush.WindowText}"
             mc:Ignorable="d"
             d:DesignHeight="120" d:DesignWidth="360">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/WorkingFilesList.Core;component/Theme/NumericUpDown.xaml"/>
                <ResourceDictionary Source="Theme/Button.xaml"/>
                <ResourceDictionary Source="Theme/ComboBox.xaml"/>
                <ResourceDictionary Source="Theme/ProgressBar.xaml"/>
                <ResourceDictionary Source="Theme/RepeatButton.xaml"/>
                <ResourceDictionary Source="Theme/Separator.xaml"/>
                <ResourceDictionary Source="Theme/TextBox.xaml"/>
                <ResourceDictionary Source="Theme/ToggleButton.xaml"/>
                <ResourceDictionary Source="Theme/ToolBar.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <locator:ViewModelService x:Key="ViewModel" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid DataContext="{StaticResource ViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--User Preferences-->
        <ToolBarTray Background="{DynamicResource VsBrush.CommandBarGradient}"
                     DataContext="{Binding UserPreferences}">
            <ToolBar Background="Transparent">
                <ComboBox ItemsSource="{Binding OptionsLists.ProjectSortOptions, Source={StaticResource ViewModel}}"
                          SelectedValue="{Binding ProjectSortOptionName}"
                          SelectedValuePath="DisplayName"
                          ToolTip="Project Name Sort"
                          Width="60">
                    
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayName}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <ComboBox ItemsSource="{Binding OptionsLists.DocumentSortOptions, Source={StaticResource ViewModel}}"
                          SelectedValue="{Binding DocumentSortOptionName}"
                          SelectedValuePath="DisplayName"
                          ToolTip="File Name Sort"
                          Width="60">

                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayName}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <Separator />
                
                <ToggleButton IsChecked="{Binding GroupByProject, Mode=TwoWay}"
                              ToolTip="Group By Project">
                    <Image Source="Icon/GroupByProject.png" />
                </ToggleButton>

                <ToggleButton IsChecked="{Binding ShowRecentUsage, Mode=TwoWay}"
                              ToolTip="Show Recent Usage">
                    <Image Source="Icon/ShowRecentUsage.png" />
                </ToggleButton>

                <ToggleButton IsChecked="{Binding AssignProjectColours, Mode=TwoWay}"
                              ToolTip="Assign Project Colours">
                    <Image Source="Icon/ProjectColours.png" />
                </ToggleButton>

                <ToggleButton IsChecked="{Binding ShowFileTypeIcons, Mode=TwoWay}"
                              ToolTip="File Type Icons">
                    <Image Source="Icon/ShowFileTypeIcons.png" />
                </ToggleButton>

                <Separator />

                <coreControls:NumericUpDown Focusable="False"
                                            Minimum="1"
                                            ToolTip="File Name Segments"
                                            Value="{Binding PathSegmentCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Width="40">
                    <coreControls:NumericUpDown.Resources>
                        <!-- Declare styles for controls within the NumericUpDown template:
                        these styles should not be given a key or they will not be used.
                        Styles are not applied within the NumericUpDown template, as a
                        different appearance is required when used within the Options
                        dialogue page -->
                        
                        <Style BasedOn="{StaticResource ToolWindowTextBox}" TargetType="{x:Type TextBox}"/>
                        <Style BasedOn="{StaticResource ToolWindowRepeatButton}" TargetType="{x:Type RepeatButton}"/>
                    </coreControls:NumericUpDown.Resources>
                </coreControls:NumericUpDown>

                <Separator />

                <ToggleButton x:Name="AboutButton"
                              x:FieldModifier="private"
                              ToolTip="Extension Information">
                    <Image Source="Icon/About.png" />
                </ToggleButton>
            </ToolBar>
        </ToolBarTray>

        <!--Active Documents-->
        <ItemsControl DataContext="{Binding DocumentMetadataManager.ActiveDocumentMetadata}"
                      d:DataContext="{d:DesignData Source=/DesignTimeData/DesignDocumentMetadata.xaml}"
                      Grid.Row="1"
                      IsTabStop="False"
                      ItemsSource="{Binding Mode=OneWay}">
            <ItemsControl.Resources>
                <system:Double x:Key="InactiveItemOpacity">0.65</system:Double>
            </ItemsControl.Resources>
            
            <ItemsControl.Style>
                <Style TargetType="{x:Type ItemsControl}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=AboutButton}" Value="False">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.Style>
            
            <ItemsControl.Template>
                <ControlTemplate>
                    <Border Background="{DynamicResource VsBrush.ToolWindowBackground}">
                        <ScrollViewer Focusable="False"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter Margin="2,0,0,0" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </ItemsControl.Template>

            <ItemsControl.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <StackPanel>
                                            <TextBlock FontStyle="Italic"
                                                       Opacity="{StaticResource InactiveItemOpacity}"
                                                       Text="{Binding Name.DisplayName}">
                                            </TextBlock>

                                            <Separator Opacity="{StaticResource InactiveItemOpacity}" Margin="0,2" />

                                            <ItemsPresenter Margin="0,0,0,10" />
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ItemsControl.GroupStyle>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button>
                        <Button.Template>
                            <ControlTemplate>
                                <Grid Background="Transparent"
                                      ToolTip="{Binding CorrectedFullName}">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <Border x:Name="MouseOverBackground"
                                            Background="{Binding ProjectBrush}"
                                            Grid.ColumnSpan="2"
                                            IsHitTestVisible="False"
                                            Margin="0,1"
                                            Opacity="0.1"
                                            Visibility="Collapsed">
                                    </Border>
                                    
                                    <ProgressBar BorderBrush="{Binding ProjectBrush}"
                                                 Foreground="{Binding ProjectBrush}"
                                                 Grid.ColumnSpan="2"
                                                 IsHitTestVisible="False"
                                                 Maximum="1"
                                                 Minimum="0"
                                                 Value="{Binding UsageOrder}">
                                    </ProgressBar>

                                    <Border x:Name="MouseOverBorder"
                                            BorderBrush="{Binding ProjectBrush}"
                                            BorderThickness="0"
                                            Grid.ColumnSpan="2"
                                            IsHitTestVisible="False"
                                            Opacity="0.7">
                                    </Border>

                                    <Image Grid.Column="0"
                                           HorizontalAlignment="Center"
                                           IsHitTestVisible="False"
                                           Margin="0,0,5,0"
                                           Source="{Binding Icon}"
                                           Stretch="None"
                                           VerticalAlignment="Center">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Opacity" Value="{StaticResource InactiveItemOpacity}"/>
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding UserPreferences.ShowFileTypeIcons, Source={StaticResource ViewModel}}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                        <Setter Property="Opacity" Value="1"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>

                                    <StackPanel Grid.Column="1"
                                                IsHitTestVisible="False"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center">
                                        <StackPanel.Resources>
                                            <Style x:Key="BaseTextBlock" TargetType="{x:Type TextBlock}">
                                                <Setter Property="FontWeight" Value="Normal"/>
                                                <Setter Property="Foreground" Value="{DynamicResource VsBrush.ToolWindowText}"/>
                                            </Style>

                                            <Style x:Key="LowlightedText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}">
                                                <Setter Property="Opacity" Value="0.45"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>

                                            <Style x:Key="HighlightedText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlock}">
                                                <Setter Property="Opacity" Value="0.65"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="Opacity" Value="1"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Resources>

                                        <TextBlock Text="{Binding DisplayNamePreHighlight}" Style="{StaticResource LowlightedText}"/>
                                        <TextBlock Text="{Binding DisplayNameHighlight}" Style="{StaticResource HighlightedText}"/>
                                        <TextBlock Text="{Binding DisplayNamePostHighlight}" Style="{StaticResource LowlightedText}"/>
                                    </StackPanel>

                                    <StackPanel x:Name="DocumentItemCommandButtons"
                                                Grid.Column="1"
                                                HorizontalAlignment="Right"
                                                Orientation="Horizontal"
                                                Visibility="Collapsed">
                                        <StackPanel.Resources>
                                            <Style TargetType="Image">
                                                <Setter Property="Margin" Value="0,-1,0,0" />
                                                <Setter Property="Stretch" Value="None" />
                                            </Style>
                                        </StackPanel.Resources>
                                        
                                        <Button x:Name="TestsButton"
                                                Command="{Binding ToolWindowCommands.OpenTestFile, Source={StaticResource ViewModel}}"
                                                CommandParameter="{Binding .}"
                                                Style="{StaticResource DocumentItemCommandButton}"
                                                ToolTip="Open Tests File (Shortcut: Right-Click)">
                                            <Image Source="Icon/test_16xMD.png" />
                                        </Button>

                                        <Button x:Name="CloseButton"
                                                Command="{Binding ToolWindowCommands.CloseDocument, Source={StaticResource ViewModel}}"
                                                CommandParameter="{Binding .}"
                                                Style="{StaticResource DocumentItemCommandButton}"
                                                ToolTip="Close File (Shortcut: Middle-Click)">
                                            <Image Source="Icon/Close_8x_16x.png" />
                                        </Button>
                                    </StackPanel>
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="DocumentItemCommandButtons" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="MouseOverBackground" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="MouseOverBorder" Property="BorderThickness" Value="1"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>

                        <Button.InputBindings>
                            <MouseBinding Command="{Binding ToolWindowCommands.ActivateWindow, Source={StaticResource ViewModel}}"
                                          CommandParameter="{Binding .}"
                                          Gesture="LeftClick" >
                            </MouseBinding>

                            <MouseBinding Command="{Binding ToolWindowCommands.CloseDocument, Source={StaticResource ViewModel}}"
                                          CommandParameter="{Binding .}"
                                          Gesture="MiddleClick">
                            </MouseBinding>

                            <MouseBinding Command="{Binding ToolWindowCommands.OpenTestFile, Source={StaticResource ViewModel}}"
                                          CommandParameter="{Binding .}"
                                          Gesture="RightClick">
                            </MouseBinding>
                        </Button.InputBindings>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <controls:AboutPanel Grid.Row="1">
            <controls:AboutPanel.Style>
                <Style TargetType="{x:Type controls:AboutPanel}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=AboutButton}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:AboutPanel.Style>
        </controls:AboutPanel>
    </Grid>
</UserControl>
